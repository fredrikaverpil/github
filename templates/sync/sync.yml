name: sync-workflows

on:
  workflow_dispatch:
    inputs:
      branch-name:
        description: 'Branch name for the PR'
        required: false
        default: 'chore/update-workflows'
      pr-title:
        description: 'PR title'
        required: false
        default: 'chore: update workflows from central repo'

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up branch
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"
          git checkout -b ${{ inputs.branch-name }}

      - name: Download detection script
        run: |
          mkdir -p .github/scripts
          curl -s https://raw.githubusercontent.com/fredrikaverpil/github/main/templates/sync/detect-project-types.sh -o .github/scripts/detect-project-types.sh
          chmod +x .github/scripts/detect-project-types.sh

      - name: Detect project types
        id: detect
        run: |
          ./.github/scripts/detect-project-types.sh

      # Use detected project types directly
      - name: Set project types
        id: config
        run: |
          echo "types=${{ steps.detect.outputs.types }}" >> $GITHUB_OUTPUT
          echo "Detected project types: ${{ steps.detect.outputs.types }}"

      - name: Download Go workflows
        if: contains(steps.config.outputs.types, 'go')
        run: |
          mkdir -p .github/workflows
          curl -s https://raw.githubusercontent.com/fredrikaverpil/github/main/templates/go/workflow.yml -o .github/workflows/go.yml
          curl -s https://raw.githubusercontent.com/fredrikaverpil/github/main/.github/workflows/go-lint.yml -o .github/workflows/go-lint.yml
          curl -s https://raw.githubusercontent.com/fredrikaverpil/github/main/.github/workflows/go-vuln.yml -o .github/workflows/go-vuln.yml

          # Copy golangci-lint action
          mkdir -p .github/actions/golangci-lint
          curl -s https://raw.githubusercontent.com/fredrikaverpil/github/main/.github/actions/golangci-lint/action.yml -o .github/actions/golangci-lint/action.yml
          curl -s https://raw.githubusercontent.com/fredrikaverpil/github/main/.github/actions/golangci-lint/.golangci.yml -o .github/actions/golangci-lint/.golangci.yml

      - name: Download Python workflows
        if: contains(steps.config.outputs.types, 'python')
        run: |
          mkdir -p .github/workflows
          curl -s https://raw.githubusercontent.com/fredrikaverpil/github/main/templates/python/workflow.yml -o .github/workflows/python.yml

      - name: Download Lua workflows
        if: contains(steps.config.outputs.types, 'lua')
        run: |
          mkdir -p .github/workflows
          curl -s https://raw.githubusercontent.com/fredrikaverpil/github/main/templates/lua/workflow.yml -o .github/workflows/lua.yml

      - name: Download common workflows
        if: steps.detect.outputs.has_common == 'true'
        run: |
          mkdir -p .github/workflows
          curl -s https://raw.githubusercontent.com/fredrikaverpil/github/main/templates/common/pr.yml -o .github/workflows/pr.yml
          # Download sync workflow to keep it updated as well
          curl -s https://raw.githubusercontent.com/fredrikaverpil/github/main/templates/sync/sync.yml -o .github/workflows/sync.yml

          # Download dependabot config
          mkdir -p .github
          curl -s https://raw.githubusercontent.com/fredrikaverpil/github/main/templates/common/dependabot.yml -o .github/dependabot.yml

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          git add .
          git commit -m "${{ inputs.pr-title }}"
          git push origin ${{ inputs.branch-name }}

      - name: Create Pull Request
        if: steps.changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ inputs.branch-name }}
          title: ${{ inputs.pr-title }}
          body: |
            This PR updates the GitHub workflows from the central repository.

            Project type detected: ${{ steps.detect.outputs.type }}

            Automated by the sync-workflows action.
          labels: ci
          delete-branch: true
