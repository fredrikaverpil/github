name: golangci-lint
description: run golangci-lint using local config or golden config

inputs:
  working-directory:
    description: 'directory to run golangci-lint in'
    required: false
    default: '.'
  config-source:
    description: 'source for golangci-lint config (local, golden-latest, golden-revision, central)'
    required: false
    default: 'golden-latest'
  gist-revision:
    description: 'specific Gist revision SHA (used only with golden-revision source)'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - name: check for local config
      id: check-config
      shell: bash
      run: |
        if [ "${{ inputs.config-source }}" = "local" ] && [ -f "${{ inputs.working-directory }}/.golangci.yml" ]; then
          echo "using local .golangci.yml"
          echo "config=local" >> $GITHUB_OUTPUT
        else
          echo "config=${{ inputs.config-source }}" >> $GITHUB_OUTPUT
        fi

    - name: download golden-latest config
      if: steps.check-config.outputs.config == 'golden-latest'
      shell: bash
      run: |
        GIST_URL="https://gist.githubusercontent.com/maratori/47a4d00457a92aa426dbd48a18776322/raw/.golangci.yml"
        curl -fsSL -o ${{ github.workspace }}/.golangci.yml $GIST_URL

    - name: download golden-revision config
      if: steps.check-config.outputs.config == 'golden-revision'
      shell: bash
      run: |
        GIST_URL="https://gist.githubusercontent.com/maratori/47a4d00457a92aa426dbd48a18776322/raw/${{ inputs.gist-revision }}/.golangci.yml"
        curl -fsSL -o ${{ github.workspace }}/.golangci.yml $GIST_URL

    - name: setup central config
      if: steps.check-config.outputs.config == 'central'
      shell: bash
      run: |
        curl -fsSL -o ${{ github.workspace }}/.golangci.yml https://raw.githubusercontent.com/fredrikaverpil/github/main/.github/actions/golangci-lint/.golangci.yml

    - name: show .golangci.yml
      shell: bash
      run: |
        ls -alh
        cat ${{ github.workspace }}/.golangci.yml

    # TODO: use taskfile, allow passing in arguments to taskfile

    - name: show supported linters
      shell: bash
      run: golangci-lint help linters

    - name: run golanci-lint
      shell: bash
      run: golangci-lint --config=${{ github.workspace }}/.golangci.yml run
      working-directory: ${{ inputs.working-directory }}

  # - name: run golangci-lint
  #   uses: golangci/golangci-lint-action@v6
  #   with:
  #     working-directory: ${{ inputs.working-directory }}
