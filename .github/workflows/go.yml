name: go

on:
  workflow_call:
    inputs:
      go-versions:
        required: false
        type: string
        default: '["stable"]' # comma-separated list of versions
      os-versions:
        required: false
        type: string
        default: '["ubuntu-latest"]' # comma-separated list of versions
      golangci-config-source:
        description: 'Source for golangci-lint config (local, golden-latest, golden-revision, central)'
        required: false
        type: string
        default: 'golden-latest'
      golangci-gist-revision:
        description: 'Specific Gist revision SHA (used only with golden-revision source)'
        required: false
        type: string
        default: ''
      skip-golangci:
        description: 'Skip running golangci-lint job'
        required: false
        type: boolean
        default: false

jobs:
  find-dirs:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.find-dirs.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: find-dirs
        uses: fredrikaverpil/github/.github/actions/find-dirs@main
        with:
          file_patterns: go.mod
          exclude_patterns: /tools

  tools-cache:
    uses: ./.github/workflows/tools-cache.yml
    with:
      go-versions: ${{ inputs.go-versions }}
      os-versions: ${{ inputs.os-versions }}

  format:
    needs: [find-dirs, tools-cache]
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.find-dirs.outputs.matrix).dir }}
        go-version: ${{ fromJson(inputs.go-versions) }}
    runs-on: ubuntu-latest # no need for matrix
    env:
      GOTOOLCHAIN: local
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false
      - uses: actions/cache@v4
        with:
          path: |
            ~/go/bin
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-tool-${{ runner.os }}-go${{ matrix.go-version }}-${{ needs.tools-cache.outputs.week }}
          restore-keys: |
            go-tool-${{ runner.os }}-go${{ matrix.go-version }}-
            go-tool-${{ runner.os }}-
      - run: task -t Taskfile.go.yml format
        working-directory: ${{ matrix.dir }}

  golangci-lint:
    needs: [find-dirs, tools-cache]
    if: ${{ !inputs.skip-golangci }}
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.find-dirs.outputs.matrix).dir }}
        go-version: ${{ fromJson(inputs.go-versions) }}
    runs-on: ubuntu-latest # no need for matrix
    env:
      GOTOOLCHAIN: local
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false
      - uses: actions/cache@v4
        with:
          path: |
            ~/go/bin
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-tool-${{ runner.os }}-go${{ matrix.go-version }}-${{ needs.tools-cache.outputs.week }}
          restore-keys: |
            go-tool-${{ runner.os }}-go${{ matrix.go-version }}-
            go-tool-${{ runner.os }}-
      - uses: fredrikaverpil/github/.github/actions/golangci-lint@main
        with:
          working-directory: ${{ matrix.dir }}
          config-source: ${{ inputs.golangci-config-source }}
          gist-revision: ${{ inputs.golangci-gist-revision }}

  govulncheck:
    needs: [find-dirs, tools-cache]
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.find-dirs.outputs.matrix).dir }}
        go-version: ${{ fromJson(inputs.go-versions) }}
        os-version: ${{ fromJson(inputs.os-versions) }}
    runs-on: ${{ matrix.os-version }}
    env:
      GOTOOLCHAIN: local
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false
      - uses: actions/cache@v4
        with:
          path: |
            ~/go/bin
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-tool-${{ runner.os }}-go${{ matrix.go-version }}-${{ needs.tools-cache.outputs.week }}
          restore-keys: |
            go-tool-${{ runner.os }}-go${{ matrix.go-version }}-
            go-tool-${{ runner.os }}-
      - run: task -t Taskfile.go.yml govulncheck
        working-directory: ${{ matrix.dir }}

  # TODO: apply quickfixes using gopls (maybe as separate job): gopls codeaction -w -exec -kind=quickfix <filename1.go> <filename2.go> ...
  gopls:
    needs: [find-dirs, tools-cache]
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.find-dirs.outputs.matrix).dir }}
        go-version: ${{ fromJson(inputs.go-versions) }}
    runs-on: ubuntu-latest # no need for matrix
    env:
      GOTOOLCHAIN: local
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false
      - name: Get date for weekly cache
        id: date
        run: echo "week=$(date +'%Y-%U')" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        # NOTE: used so to 'task' is available
        with:
          path: |
            ~/go/bin
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-tool-${{ runner.os }}-go${{ matrix.go-version }}-${{ needs.tools-cache.outputs.week }}
          restore-keys: |
            go-tool-${{ runner.os }}-go${{ matrix.go-version }}-
            go-tool-${{ runner.os }}-
      # NOTE: does not play well with `go tool`, causes golang.org/x/tools conflicts. Therefore we install it here.
      - run: task -t Taskfile.go.yml gopls
        working-directory: ${{ matrix.dir }}

  gosec:
    needs: [find-dirs, tools-cache]
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.find-dirs.outputs.matrix).dir }}
        go-version: ${{ fromJson(inputs.go-versions) }}
        os-version: ${{ fromJson(inputs.os-versions) }}
    runs-on: ${{ matrix.os-version }}
    env:
      GOTOOLCHAIN: local
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false
      - uses: actions/cache@v4
        with:
          path: |
            ~/go/bin
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-tool-${{ runner.os }}-go${{ matrix.go-version }}-${{ needs.tools-cache.outputs.week }}
          restore-keys: |
            go-tool-${{ runner.os }}-go${{ matrix.go-version }}-
            go-tool-${{ runner.os }}-
      - run: task -t Taskfile.go.yml gosec
        working-directory: ${{ matrix.dir }}

  go-test:
    needs: [find-dirs, tools-cache]
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.find-dirs.outputs.matrix).dir }}
        go-version: ${{ fromJson(inputs.go-versions) }}
        os-version: ${{ fromJson(inputs.os-versions) }}
    runs-on: ${{ matrix.os-version }}
    env:
      GOTOOLCHAIN: local
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false
      - uses: actions/cache@v4
        with:
          path: |
            ~/go/bin
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-tool-${{ runner.os }}-go${{ matrix.go-version }}-${{ needs.tools-cache.outputs.week }}
          restore-keys: |
            go-tool-${{ runner.os }}-go${{ matrix.go-version }}-
            go-tool-${{ runner.os }}-
      - run: task -t Taskfile.go.yml go-test
        working-directory: ${{ matrix.dir }}

  go-vet:
    needs: [find-dirs, tools-cache]
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.find-dirs.outputs.matrix).dir }}
        go-version: ${{ fromJson(inputs.go-versions) }}
    runs-on: ubuntu-latest # no need for matrix
    env:
      GOTOOLCHAIN: local
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false
      - uses: actions/cache@v4
        with:
          path: |
            ~/go/bin
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-tool-${{ runner.os }}-go${{ matrix.go-version }}-${{ needs.tools-cache.outputs.week }}
          restore-keys: |
            go-tool-${{ runner.os }}-go${{ matrix.go-version }}-
            go-tool-${{ runner.os }}-
      - run: task -t Taskfile.go.yml go-vet
        working-directory: ${{ matrix.dir }}
