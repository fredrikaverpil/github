name: go

on:
  workflow_call:
    inputs:
      go-versions:
        required: false
        type: string
        default: '["stable"]' # comma-separated list of versions
      os-versions:
        required: false
        type: string
        default: '["ubuntu-latest"]' # comma-separated list of versions
      golangci-config-source:
        description: 'Source for golangci-lint config (local, golden-latest, golden-revision, central)'
        required: false
        type: string
        default: 'golden-latest'
      golangci-gist-revision:
        description: 'Specific Gist revision SHA (used only with golden-revision source)'
        required: false
        type: string
        default: ''
      skip-golangci:
        description: 'Skip running golangci-lint job'
        required: false
        type: boolean
        default: false

jobs:
  find-dirs:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.find-dirs.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: find-dirs
        uses: fredrikaverpil/github/.github/actions/find-dirs@main
        with:
          file_patterns: go.mod
          exclude_patterns: /tools

  get-date:
    runs-on: ubuntu-latest
    outputs:
      week: ${{ steps.date.outputs.week }}
    steps:
      - id: date
        run: echo "week=$(date +'%Y-%U')" >> $GITHUB_OUTPUT

  go-tool-cache:
    needs: [get-date]
    strategy:
      fail-fast: false
      matrix:
        go-version: ${{ fromJson(inputs.go-versions) }}
        os-version: ${{ fromJson(inputs.os-versions) }}
    runs-on: ${{ matrix.os-version }}
    env:
      GOTOOLCHAIN: local
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: cache go tools
        uses: actions/cache@v4
        id: tools-cache
        with:
          path: |
            ~/go/bin
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-tool-${{ runner.os }}-go${{ matrix.go-version }}-${{ needs.get-date.outputs.week }}
          restore-keys: |
            go-tool-${{ runner.os }}-go${{ matrix.go-version }}-
            go-tool-${{ runner.os }}-
      - name: Install Go tools
        # NOTE: when using 'stable', the cache is always hit, so we might not want this:
        # if: steps.tools-cache.outputs.cache-hit != 'true'
        run: go install tool
        working-directory: ${{ github.workspace }}/tools

  format:
    needs: [find-dirs, get-date, go-tool-cache]
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.find-dirs.outputs.matrix).dir }}
        go-version: ${{ fromJson(inputs.go-versions) }}
    runs-on: ubuntu-latest # no need for matrix
    env:
      GOTOOLCHAIN: local
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/cache@v4
        with:
          path: ~/go/bin
          key: go-tool-${{ runner.os }}-go${{ matrix.go-version }}-${{ needs.get-date.outputs.week }}
      - run: goimports -w .
        working-directory: ${{ matrix.dir }}
      - run: gci write --skip-generated --skip-vendor -s standard -s default .
        working-directory: ${{ matrix.dir }}
      - run: gofumpt
        working-directory: ${{ matrix.dir }}
      # FIXME: FATAL Error formatting source: exec: "gofumpt": executable file not found in $PATH
      # - run: golines --base-formatter=gofumpt --ignore-generated --tab-len=1 --max-len=120 --write-output .
      # working-directory: ${{ matrix.dir }}
      - run: golines --ignore-generated --tab-len=1 --max-len=120 --write-output .
        working-directory: ${{ matrix.dir }}
      - run: git diff --exit-code
        working-directory: ${{ matrix.dir }}

  golangci-lint:
    needs: [find-dirs, get-date, go-tool-cache]
    if: ${{ !inputs.skip-golangci }}
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.find-dirs.outputs.matrix).dir }}
        go-version: ${{ fromJson(inputs.go-versions) }}
    runs-on: ubuntu-latest # no need for matrix
    env:
      GOTOOLCHAIN: local
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/cache@v4
        with:
          path: ~/go/bin
          key: go-tool-${{ runner.os }}-go${{ matrix.go-version }}-${{ needs.get-date.outputs.week }}
      - uses: fredrikaverpil/github/.github/actions/golangci-lint@main
        with:
          working-directory: ${{ matrix.dir }}
          config-source: ${{ inputs.golangci-config-source }}
          gist-revision: ${{ inputs.golangci-gist-revision }}

  govulncheck:
    needs: [find-dirs]
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.find-dirs.outputs.matrix).dir }}
        go-version: ${{ fromJson(inputs.go-versions) }}
        os-version: ${{ fromJson(inputs.os-versions) }}
    runs-on: ${{ matrix.os-version }}
    env:
      GOTOOLCHAIN: local
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      # NOTE: does not use govulncheck from the go.mod
      - id: govulncheck
        uses: golang/govulncheck-action@v1
        with:
          work-dir: ${{ matrix.dir }}
          go-version-input: ${{ matrix.go-version }}

  # TODO: apply quickfixes using gopls (maybe as separate job): gopls codeaction -w -exec -kind=quickfix <filename1.go> <filename2.go> ...
  gopls:
    needs: [find-dirs, get-date, go-tool-cache]
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.find-dirs.outputs.matrix).dir }}
        go-version: ${{ fromJson(inputs.go-versions) }}
    runs-on: ubuntu-latest # no need for matrix
    env:
      GOTOOLCHAIN: local
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Get date for weekly cache
        id: date
        run: echo "week=$(date +'%Y-%U')" >> $GITHUB_OUTPUT
      - name: cache gopls
        uses: actions/cache@v4
        id: gopls-cache
        with:
          path: |
            ~/go/bin/gopls
            ~/go/pkg/mod
            ~/.cache/go-build
          # 1-week cache
          key: gopls-${{ runner.os }}-go${{ matrix.go-version }}-${{ steps.date.outputs.week }}
          restore-keys: |
            gopls-${{ runner.os }}-go${{ matrix.go-version }}-
            gopls-${{ runner.os }}-
      # NOTE: does not play well with `go tool`, causes golang.org/x/tools conflicts. Therefore we install it here.
      - run: go install golang.org/x/tools/gopls@latest
      - run: gopls stats
        working-directory: ${{ matrix.dir }}
      - run: find . -name "*.go" | xargs -P $(nproc) gopls check
        working-directory: ${{ matrix.dir }}
      - run: git diff --exit-code
        working-directory: ${{ matrix.dir }}

  gosec:
    needs: [find-dirs, get-date, go-tool-cache]
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.find-dirs.outputs.matrix).dir }}
        go-version: ${{ fromJson(inputs.go-versions) }}
        os-version: ${{ fromJson(inputs.os-versions) }}
    runs-on: ${{ matrix.os-version }}
    env:
      GOTOOLCHAIN: local
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/cache@v4
        with:
          path: ~/go/bin
          key: go-tool-${{ runner.os }}-go${{ matrix.go-version }}-${{ needs.get-date.outputs.week }}
      - run: gosec ./...
        working-directory: ${{ matrix.dir }}

  go-test:
    needs: [find-dirs, go-tool-cache]
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.find-dirs.outputs.matrix).dir }}
        go-version: ${{ fromJson(inputs.go-versions) }}
        os-version: ${{ fromJson(inputs.os-versions) }}
    runs-on: ${{ matrix.os-version }}
    env:
      GOTOOLCHAIN: local
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - run: go test ./...
        working-directory: ${{ matrix.dir }}

  go-vet:
    needs: [find-dirs, go-tool-cache]
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.find-dirs.outputs.matrix).dir }}
        go-version: ${{ fromJson(inputs.go-versions) }}
    runs-on: ubuntu-latest # no need for matrix
    env:
      GOTOOLCHAIN: local
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - run: go vet ./...
        working-directory: ${{ matrix.dir }}
