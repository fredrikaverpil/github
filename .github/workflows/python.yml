
name: python

on:
  workflow_call:
    inputs:
      python-versions:
        required: false
        type: string
        default: '["latest"]' # comma-separated list of versions
      os-versions:
        required: false
        type: string
        default: '["ubuntu-latest"]' # comma-separated list of versions
      file_patterns:
        description: 'File patterns to include for python project detection (comma-separated)'
        required: false
        type: string
        default: 'uv.lock'
      exclude_patterns:
        description: 'File patterns to exclude for python project detection (comma-separated)'
        required: false
        type: string
        default: ''

jobs:
  find-dirs:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.find-dirs.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: find-dirs
        uses: fredrikaverpil/github/.github/actions/find-dirs@main
        with:
          file_patterns: ${{ inputs.file_patterns }}
          exclude_patterns: ${{ inputs.exclude_patterns }}

  lint:
    needs: [find-dirs]
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.find-dirs.outputs.matrix).dir }}
        python-version: ${{ fromJson(inputs.python-versions) }}
        os-version: ${{ fromJson(inputs.os-versions) }}
    runs-on: ${{ matrix.os-version }}
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: task -t Taskfile.python.yml lint

  format:
    needs: [find-dirs]
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.find-dirs.outputs.matrix).dir }}
        python-version: ${{ fromJson(inputs.python-versions) }}
        os-version: ${{ fromJson(inputs.os-versions) }}
    runs-on: ${{ matrix.os-version }}
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: task -t Taskfile.python.yml format

  type:
    needs: [find-dirs]
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.find-dirs.outputs.matrix).dir }}
        python-version: ${{ fromJson(inputs.python-versions) }}
        os-version: ${{ fromJson(inputs.os-versions) }}
    runs-on: ${{ matrix.os-version }}
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: task -t Taskfile.python.yml mypy

  test:
    needs: [find-dirs]
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.find-dirs.outputs.matrix).dir }}
        python-version: ${{ fromJson(inputs.python-versions) }}
        os-version: ${{ fromJson(inputs.os-versions) }}
    runs-on: ${{ matrix.os-version }}
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: task -t Taskfile.python.yml pytest

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report-${{ matrix.os-version }}-${{ matrix.python-version }}
          path: htmlcov
          retention-days: 5
